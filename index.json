
[{"content":"","date":"28 August 2025","externalUrl":null,"permalink":"/blog/","section":"Blogs","summary":"","title":"Blogs","type":"blog"},{"content":"平平无奇的前端工程师\n上班想下班！\n","date":"28 August 2025","externalUrl":null,"permalink":"/","section":"Welcome to Blowfish! 🎉","summary":"平平无奇的前端工程师","title":"Welcome to Blowfish! 🎉","type":"page"},{"content":" 插件选择 # 必装扩展：统一代码风格、格式化、语法检查 # ESLint：javascript/typescript/json 语法检查\nStylelint: css/scss/less 语法检查\nPrettier：格式化\nVetur：智能提示、格式化、语法检查\n选装扩展：更好的开发体验 # Auto Close Tag：自动追加末尾闭合标签\nAuto Renme Tag：重命名标签首尾同时修改\nCSS Navigation：跳转 HTML 的 class 属性定义\nFile Peek：跳转文件引用\nGit History：查看 Git 提交历史记录\nGitLens：鼠标光标聚焦的代码行，行右侧将显示上一次提交信息\nHighlight Matching Tag：高亮左侧空白竖线和 HTML 标签下划线，便于观察首尾位置\nHTML CSS Support：提示 CSS 代码块\nMarkdown All in One：扩展 markdown 特性，如创建目录、代码片段、快捷键等\nMarkdown PDF：将 markdown 文件导出为 pdf 文件\nMarkdown Preview Mermaid Support：使 markdown 支持流程图、思维导图等\nPath Autocomplete：自动补全引用的路径\nSVG：预览 SVG 图片\nVue 3 Snippets：提示 Vue 代码块\nVue Peek：跳转组件定义\nvue-helper：提示 Vue 代码块\n注意：查看 .vscode/settings.json，若文本置灰，则表示未安装扩展，配置无效\n开发调试 # 源码准备 # 拉取代码\ngit clone ${git地址} 进入项目中\ncd ${项目目录} Windows 禁止忽略大小写\n由于 Windows 默认忽略文件夹及文件大小写，而 Linux/MacOS 不忽略，所以使 Windows 与其保持一致\ngit config core.ignorecase false --global # 代码规范 命名规则 # Pascal 命名（AbCd）：class/type/interface/enum 名、自定义组件文件名和标签名、路由 name，样式(仅 ID)\nKebab 命名（a-b-c-d）：原生标签、第三方标签、标签属性，样式(ID 除外)\nCamel 命名（aBcD）：其余均用\n路由 name 使用名词词组命名\n函数名尽量不要加 handle，思考使用更贴近当前业务应该用的动词开头，比如 openXXX，changeXXX，switchXXX，pickXXX 等\n命名单词尽可能思考简短贴近业务意思的单词，除了国际标准的缩写，尽量不要缩写，建议最多 5 个，超过 5 个则会降低可读性\n约定建议 # HTML 相关 # 自定义通用组件使用 Aq 前缀，区别于历史的组件管理\n除了封装组件，禁止使用 style 属性写行内样式\n属性的编写顺序，按照重要程度的优先级排列：v- 前缀 \u0026gt; id/ref \u0026gt; 数据变量 \u0026gt; 效果变量 \u0026gt; 其他属性 \u0026gt; 事件(最末尾)，如下：\n\u0026lt;input v-if=\u0026#34;visible\u0026#34; v-model=\u0026#34;value\u0026#34; :max=\u0026#34;maxLength\u0026#34; :readonly=\u0026#34;isReadonly\u0026#34; clearable @input=\u0026#34;searchKeyword\u0026#34;\u0026gt;\u0026lt;/input\u0026gt; JS/TS 相关 # 优先思考可否使用值类型定义变量和初始化变量；实在增加工作量，才考虑用 any 定义，null 初始化\n优先考虑可否仅用 if 做判断，实在需要 else 才加，尽量避免使用 else if，利于减少嵌套层级，可读性更好\n使用 switch 时，每个 case 代码块尽量不要超过 10 行，超过 10 行应该思考写成方法，这样可读性更好\n使用 for 而不是 forEach，防止内部回调存在异步问题，注意 for / for in / for of / forEach / map 的区别，按场景使用\n使用 filter 过滤首条，而不是 find，防止 undefined 导致异常\n使用路由的 name 跳转，而不是 path，减少和平台的绑定关系\nloading 加载一定要在 finally 中关闭，防止异常导致无法关闭\n接口传参尽可能定义为值类型，可读性更好，规避接口提供冗余字段难以查找，新增表单和更新表单可以除外\n仅键值对初始化为{}，其他 object 类型，初始化均用 null，禁止用 undefined\nPS：由于历史原因未在 eslint 规则中强制限制\n能用 this，尽量用 this，若作用域有问题，导致报错，才使用变量赋值 this\nCSS/SCSS/LESS 相关 # 优先思考可否使用自适应布局样式\n覆盖第三方样式：尽量不使用 v-deep、/deep/ 和 \u0026lsquo;\u0026raquo;\u0026gt;\u0026rsquo;，会偶现不生效\n可使用两个 style 标签，含 scoped：仅自定义样式，不含 scoped：仅覆盖第三方样式\n优先思考优先级覆盖，实在不行，可使用!important\n","date":"28 August 2025","externalUrl":null,"permalink":"/blog/quickstart/","section":"Blogs","summary":"插件选择 # 必装扩展：统一代码风格、格式化、语法检查 # ESLint：javascript/typescript/json 语法检查","title":"开发准备内容","type":"blog"},{"content":" 一、Git常用方法 # 1.1 仓库推送方法 # 将本地开发的记录在vscode的git管理工具中暂存 git add . 将修改的内容暂存后继续存储暂存，可以不设置暂存的名称，如有多个暂存可以设置 git stash 接下来就开始拉取远端的仓库代码，暂存代码就是为了避免本地和远端的代码不一致造成冲突 git pull //拉取远端仓库代码 将暂存的代码弹出 git stash pop 弹出代码后，如果有冲突的地方，就根据情况选择传入的修改（暂存的）和原本的代码（仓库的），修改完成后保存代码\n暂存代码并本地提交，推送到仓库\ngit add . git commit -m \u0026#39;提交内容的描述文字\u0026#39; git push 1.2 git tag的用法 # git tag 作用\ntag是一个记录点，用于记录某个commit点或分支的历史快照，这样方便查找版本号，相比commit id 更加人性化，直接可以通过v1或v2查找对应发布版本的源码。\n创建轻量标签 git tag 1.2.3 注释创建的标签 git tag -a 1.2.3 -m \u0026#34;标签的描述信息\u0026#34; 查看1.2.3版本的具体信息 git show 1.2.3 将标签推送到远程 git push origin 1.2.3 一次性推送多个标签到远程 git push origin --tags 删除本地标签 git tag -d 1.2.4 删除远程标签 git push origin :refs/tags/1.2.3 1.3 git撤销相关 # 撤销最近一次的commit操作并保留修改记录（soft） git reset --soft HEAD^ 1.4 git merge 合并相关 # 先切换到需要合并到发分支（确保没有未提交的代码） git checkout dev 拉取该分支最新代码（一定确保pull成功） git pull 合并源分支 git merge feat_20240603 处理合并过来的冲突代码\n提交代码（commit + push）\n1.5 git合并代码 # git conifg pull.rebase false #merge git conifg pull.rebase true #rebase Merge（合并）\n将两个分支的历史合并在一起，创建一个新的合并提交，保留了各自分支的提交历史。这会产生一个合并的提交节点，显示了两个分支的合并点。\nRebase（变基）\n将当前分支的提交“移动”到另一个分支的最新提交之后，使得提交历史更加线性清晰。在变基过程中，会将当前分支的提交逐个应用到目标分支的最新提交上，不会产生合并提交。\n总结：选择使用合并（Merge）的主要原因是合并是一种相对保守和安全的合并方式，不会改变提交历史，保留了分支的完整历史记录。此外，合并操作相对简单，易于理解和操作，适合大多数团队协作开发的需求。\n1.6 npm i 出现node-sass报错 # npm ERR! errno 1 npm ERR! node-sassa4.14.1 postinstall:`node scripts/build.js npm ERR! Exit status 1 npm ERR! Failed at the node-sass@4.14 1 postinstall script. npm ERR! This is probably not a problem with npm. There is likely additional logging output a npm ERR! A complete log of this run can be found in: npm ERR! /Users/misty/.npm/ logs/2025-05-12T08 49_54 463Z-debug.log 解决思路：\n一般情况是node-sass版本的问题，检查项目的package.json和package-lock.json中node-sass版本是否一致，可能前者版本低于后者版本导致的。我们以lock版本为准，修改package.json中的版本号，与lock中的保持一致，再次npm install，大概率可以解决问题。\nPS：package.json中有^符号应该是向上取版本号的，但是在这里居然失效了\n环境：MacBook Air M1 macOS15.5 另外的情况是环境配置的问题，node-sass插件依赖python的环境，所以可以尝试给电脑安装python来验证是否可以解决。\n","date":"28 August 2025","externalUrl":null,"permalink":"/blog/firstblog/","section":"Blogs","summary":"一、Git常用方法 # 1.","title":"开发笔记","type":"blog"},{"content":" 《活着》 # 作者：余华 # 2016年 # 高三下晚自习，我都会抱着它读，细嚼文字，用脑海构想画面，回到那个年代，动荡的，无助的年代。\n富贵，他从大多数人不能到达的高度跌下，回归到普通老百姓的队列，穷极一生，也没有获得一个相对圆满的结局。\n富贵周围的人，都相继离去，只剩下他和一头老牛，在盛夏的蝉鸣中，我仿佛就在他们不远处的大树下，拿着芭蕉扇，扇着风，感觉很燥热，但是他们好像很平静，平静地像一张旧报纸，续写了好多他生命的文字。\n","date":"16 November 2023","externalUrl":null,"permalink":"/books/book1/","section":"Books","summary":"《活着》 # 作者：余华 # 2016年 # 高三下晚自习，我都会抱着它读，细嚼文字，用脑海构想画面，回到那个年代，动荡的，无助的年代。","title":"《活着》","type":"books"},{"content":"","date":"16 November 2023","externalUrl":null,"permalink":"/books/","section":"Books","summary":"","title":"Books","type":"books"},{"content":"","externalUrl":null,"permalink":"/authors/","section":"Authors","summary":"","title":"Authors","type":"authors"},{"content":"","externalUrl":null,"permalink":"/categories/","section":"Categories","summary":"","title":"Categories","type":"categories"},{"content":"","externalUrl":null,"permalink":"/series/","section":"Series","summary":"","title":"Series","type":"series"},{"content":"","externalUrl":null,"permalink":"/tags/","section":"Tags","summary":"","title":"Tags","type":"tags"}]